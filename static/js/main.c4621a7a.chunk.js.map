{"version":3,"sources":["components/Menu.js","components/Home.js","components/Contact.js","components/NotFound.js","components/About.js","components/Product.js","components/Products.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["menus","name","to","exact","MenuLink","label","activeOnlyWhenExact","path","children","active","match","className","Menu","showMenus","result","length","map","menu","index","key","this","Component","Home","Contact","NotFound","About","Product","props","params","console","log","Products","url","id","slug","price","product","component","routes","main","App","showContentMenus","route","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4621a7a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link, Route} from \"react-router-dom\";\r\n\r\nconst menus = [\r\n    {\r\n        name: 'Trang chủ',\r\n        to: '/',\r\n        exact: true\r\n    },\r\n    {\r\n        name: 'Giới thiệu',\r\n        to: '/about',\r\n        exact: false\r\n    },\r\n    {\r\n        name: 'Liên hệ',\r\n        to: '/contact',\r\n        exact: false\r\n    },\r\n\r\n    {\r\n        name: 'Sản phẩm',\r\n        to: '/products',\r\n        exact: false\r\n    }\r\n]\r\nconst MenuLink = ({label, to, activeOnlyWhenExact}) => {\r\n    return (\r\n        <Route\r\n            path={to}\r\n            exact={activeOnlyWhenExact}\r\n            children={({match}) => {\r\n            var active = match ? 'active' : '';\r\n            return (\r\n                <li className={active}>\r\n                    <Link to={to} className={'my-link'}>{label}</Link>\r\n                </li>\r\n            )\r\n        }}/>\r\n    )\r\n}\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-default\">\r\n                <ul className=\"nav navbar-nav\">\r\n                    {this.showMenus(menus)}\r\n                    {/*<MenuLink label=\"Trang chủ\" to='/' activeOnlyWhenExact={true}/>*/}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n\r\n    showMenus = (menus) => {\r\n        var result = null;\r\n        if (menus.length > 0) {\r\n            result = menus.map((menu, index) => {\r\n                return (\r\n                    <MenuLink key={index}\r\n                              label={menu.name}\r\n                              to={menu.to}\r\n                              activeOnlyWhenExact={menu.exact}\r\n                    />\r\n                )\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, {Component} from 'react';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Đây là trang chủ\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, {Component} from 'react';\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Đây là trang liên hệ\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, {Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Not found\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, {Component} from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Đây là trang about\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;\r\n","import React, {Component} from 'react';\r\n\r\nclass Product extends Component {\r\n    render() {\r\n        var {match}=this.props;\r\n        var name=match.params.name;\r\n        console.log(name);\r\n        return (\r\n            <div>\r\n                Day la chi tiet san pham: {name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;\r\n","import React, {Component} from 'react';\r\nimport {NavLink,Route} from \"react-router-dom\";\r\nimport Product from \"./Product\";\r\nclass Products extends Component {\r\n    render() {\r\n        var products = [\r\n            {\r\n                id: 1,\r\n                slug:'iphone',\r\n                name: 'Iphone X',\r\n                price: '1000'\r\n            },\r\n            {\r\n                id: 2,\r\n                slug:'samsung',\r\n                name: 'Samsung galaxy S10',\r\n                price: '1200'\r\n            },\r\n            {\r\n                id: 3,\r\n                slug:'oppo',\r\n                name: 'Oppo F1s',\r\n                price: '900'\r\n            },\r\n        ];\r\n        var {match}=this.props;\r\n        var url=match.url;\r\n        var result = products.map((product, index) => {\r\n            return (\r\n                <NavLink to={`${url}/${product.slug}`} key={index}>\r\n                    <li className=\"list-group-item\">{product.id}-{product.name}-{product.price}</li>\r\n                </NavLink>\r\n            )\r\n        })\r\n        return (\r\n            <div className='container'>\r\n                <h1>Danh sách sản phẩm</h1>\r\n                <div className=\"row\">\r\n                    <ul className=\"list-group\">\r\n                        {result}\r\n                    </ul>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Route path='/products/:name' component={Product}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;\r\n","import Home from \"./components/Home\";\r\nimport Contact from \"./components/Contact\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport About from \"./components/About\";\r\nimport React from \"react\";\r\nimport Products from \"./components/Products\";\r\nconst routes=[\r\n    {\r\n        path:'/',\r\n        exact:true,\r\n        main:()=> <Home/>\r\n    },\r\n    {\r\n        path:'/about',\r\n        exact:false,\r\n        main:()=> <About/>\r\n    },\r\n    {\r\n        path:'/contact',\r\n        exact:false,\r\n        main:()=> <Contact/>\r\n    },\r\n    {\r\n        path:'/products',\r\n        exact:false,\r\n        main:({match})=> <Products match={match}/>\r\n    },\r\n    {\r\n        path:'',\r\n        exact:false,\r\n        main:()=> <NotFound/>\r\n    }\r\n];\r\nexport default routes;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Menu from \"./components/Menu\";\nimport routes from \"./routes\";\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"App\">\n                    <Menu/>\n                    <Switch>\n                        {/*<Route path=\"/\" exact component={Home}/>*/}\n                        {this.showContentMenus(routes)}\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n    showContentMenus=(routes)=>{\n        var result=null;\n        if(routes.length>0){\n            result=routes.map((route,index)=>{\n                return(\n                    <Route key={index} path={route.path} exact={route.exact} component={route.main}/>\n                )\n            })\n        }\n        return result;\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}